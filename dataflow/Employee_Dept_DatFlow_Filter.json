{
	"name": "Employee_Dept_DatFlow_Filter",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EmployeeData",
						"type": "DatasetReference"
					},
					"name": "EmployeeDataset"
				},
				{
					"dataset": {
						"referenceName": "DepartmentData",
						"type": "DatasetReference"
					},
					"name": "DepartmentDataset"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "EmployeeDeptFilterData",
						"type": "DatasetReference"
					},
					"name": "EmployeeDeptFilterData"
				}
			],
			"transformations": [
				{
					"name": "EmployeeDeptData"
				},
				{
					"name": "Filter"
				}
			],
			"script": "source(output(\n\t\tID as string,\n\t\tName as string,\n\t\tGender as string,\n\t\tSalary as string,\n\t\tDepartmentId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EmployeeDataset\nsource(output(\n\t\tID as string,\n\t\tDepartmentName as string,\n\t\tLocation as string,\n\t\tDepartmentHead as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DepartmentDataset\nEmployeeDataset, DepartmentDataset join(DepartmentId == DepartmentDataset@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> EmployeeDeptData\nEmployeeDeptData filter(equals(Gender,'Male')) ~> Filter\nFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EmployeeDepartmentMaleData'],\n\tmapColumn(\n\t\tID = EmployeeDataset@ID,\n\t\tName,\n\t\tGender,\n\t\tSalary,\n\t\tDepartmentId,\n\t\tDepartmentName,\n\t\tDepartmentHead\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EmployeeDeptFilterData"
		}
	}
}