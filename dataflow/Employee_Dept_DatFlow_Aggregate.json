{
	"name": "Employee_Dept_DatFlow_Aggregate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EmployeeData",
						"type": "DatasetReference"
					},
					"name": "EmployeeDataset"
				},
				{
					"dataset": {
						"referenceName": "DepartmentData",
						"type": "DatasetReference"
					},
					"name": "DepartmentDataset"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Total_Employees_ByDepartment",
						"type": "DatasetReference"
					},
					"name": "EmployeeDeptDataAggegrateed"
				}
			],
			"transformations": [
				{
					"name": "EmployeeDeptData"
				},
				{
					"name": "AggregateEmpDeptData"
				}
			],
			"script": "source(output(\n\t\tID as string,\n\t\tName as string,\n\t\tGender as string,\n\t\tSalary as string,\n\t\tDepartmentId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> EmployeeDataset\nsource(output(\n\t\tID as string,\n\t\tDepartmentName as string,\n\t\tLocation as string,\n\t\tDepartmentHead as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DepartmentDataset\nEmployeeDataset, DepartmentDataset join(DepartmentId == DepartmentDataset@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> EmployeeDeptData\nEmployeeDeptData aggregate(groupBy(DepartmentName),\n\t{Total Employees} = count(DepartmentDataset@ID)) ~> AggregateEmpDeptData\nAggregateEmpDeptData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TotalEmployees_By_Department'],\n\tmapColumn(\n\t\tDepartmentName,\n\t\t{Total Employees}\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EmployeeDeptDataAggegrateed"
		}
	}
}